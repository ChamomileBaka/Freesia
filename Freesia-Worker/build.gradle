plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}


configurations {
    customShadow
}

dependencies {
    // To change the versions see the gradle.properties2 file
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings loom.officialMojangMappings()

    include(implementation(project(":Freesia-Common")))
    include(implementation("com.electronwill.night-config:toml:${rootProject.night_config_version}"))

    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
    modImplementation fileTree('libs')
}

loom {
    accessWidenerPath = file("src/main/resources/freesia_worker.accesswidener")
}

processResources {
    inputs.property "version", rootProject.version
    inputs.property "minecraft_version", rootProject.minecraft_version
    inputs.property "loader_version", rootProject.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": rootProject.version,
                "minecraft_version": rootProject.minecraft_version,
                "loader_version": rootProject.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.name}" }
    }
}

shadowJar{
    configurations = [project.configurations.customShadow]
    dependsOn(remapJar)
}